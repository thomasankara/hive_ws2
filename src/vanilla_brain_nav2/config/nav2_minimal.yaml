##############################################
# NAV2 - MODE "HACKERMAN" (SMAC HYBRID + MPPI)
##############################################

##############################################
# CONTROLLER SERVER â€” MPPI Ackermann (bidirectionnel optimisÃ©)
##############################################
controller_server:
  ros__parameters:
    use_sim_time: true
    enable_stamped_cmd_vel: false
    controller_frequency: 20.0

    progress_checker_plugins: ["progress_checker"]
    goal_checker_plugins: ["goal_checker"]
    controller_plugins: ["FollowPath"]

    # === Progress Checker ===
    progress_checker:
      plugin: "nav2_controller::SimpleProgressChecker"
      required_movement_radius: 0.2
      movement_time_allowance: 15.0

    # === Goal Checker ===
    goal_checker:
      plugin: "nav2_controller::SimpleGoalChecker"
      xy_goal_tolerance: 0.25
      yaw_goal_tolerance: 0.25
      stateful: false

    # === MPPI Controller ===
    FollowPath:
      plugin: "nav2_mppi_controller::MPPIController"

      # --- ModÃ¨le de mouvement ---
      motion_model: "Ackermann"        # ðŸ”¹ pas de rotation sur place
      time_steps: 50
      model_dt: 0.05
      batch_size: 2000
      iteration_count: 1
      temperature: 0.3
      gamma: 0.015

      # --- Limites cinÃ©matiques ---
      vx_max: 1.0                      # ðŸ”¹ vitesse avant max
      vx_min: -0.4                     # ðŸ”¹ autorise marche arriÃ¨re
      wz_max: 1.5                      # ðŸ”¹ rotation max pendant virage
      ax_max: 2.0
      wz_limit: 1.5
      ay_max: 0.0                      # ðŸ”¹ pas de latÃ©ralitÃ©
      vy_max: 0.0                      # ðŸ”¹ dÃ©sactive mouvement latÃ©ral

      # --- Bruit de sampling ---
      vx_std: 0.4
      vy_std: 0.0
      wz_std: 0.3

      # --- RÃ©glages comportementaux ---
      lookahead_dist: 1.0              # ðŸ”¹ meilleure accroche sur les inversions
      transform_tolerance: 0.3
      debug_trajectory: false
      visualize: true
      publish_optimal_trajectory: true
      publish_critics_stats: false
      prune_distance: 3.0
      max_robot_pose_search_dist: 3.0
      retry_attempt_limit: 1
      regenerate_noises: true

      # --- Gestion des inversions (cusp) ---
      enforce_path_inversion: true     # ðŸ”¹ force le passage au point de demi-tour
      inversion_xy_tolerance: 0.25     # ðŸ”¹ tolÃ©rance position
      inversion_yaw_tolerance: 0.4     # ðŸ”¹ tolÃ©rance angle

      # --- Poids de coÃ»ts globaux ---
      path_cost_weight: 10.0           # ðŸ”¹ coller au chemin SMAC
      goal_cost_weight: 15.0
      smooth_cost_weight: 0.2
      obstacle_cost_weight: 15.0
      rotate_cost_weight: 30.0         # ðŸ”¹ interdit rotation sur place
      prefer_forward_penalty: 0.5      # ðŸ”¹ marche avant privilÃ©giÃ©e mais arriÃ¨re permise

      # === Critics (comportement du suivi) ===
      critics:
        [
          "PathFollowCritic",
          "PathAngleCritic",
          "PathAlignCritic",
          "GoalCritic",
          "GoalAngleCritic"
        ]

      # --- Critics tuning ---
      PathFollowCritic:
        enabled: true
        cost_power: 1
        cost_weight: 10.0
        offset_from_furthest: 6
        threshold_to_consider: 1.4

      PathAngleCritic:
        enabled: true
        cost_power: 1
        cost_weight: 2.5
        threshold_to_consider: 0.5
        offset_from_furthest: 4
        max_angle_to_furthest: 1.0
        mode: 2

      PathAlignCritic:
        enabled: true
        cost_power: 1
        cost_weight: 10.0
        threshold_to_consider: 0.5
        offset_from_furthest: 14
        trajectory_point_step: 3
        use_path_orientations: true

      # === RÃ©activation du Goal ===
      GoalCritic:
        enabled: true
        cost_power: 1
        cost_weight: 10.0            # ðŸ”¹ attire vers la position finale
        threshold_to_consider: 1.5   # ðŸ”¹ nâ€™agit quâ€™Ã  moins de 1.5 m du but

      GoalAngleCritic:
        enabled: true
        cost_power: 1
        cost_weight: 3.0             # ðŸ”¹ oriente le robot dans lâ€™axe de fin
        threshold_to_consider: 0.8   # ðŸ”¹ sâ€™active seulement proche du but


# === LOCAL COSTMAP ===
local_costmap:
  local_costmap:
    ros__parameters:
      use_sim_time: true
      global_frame: map
      robot_base_frame: robot1/base_footprint
      update_frequency: 5.0
      publish_frequency: 2.0
      rolling_window: true
      width: 6
      height: 6
      resolution: 0.05
      robot_radius: 0.30
      plugins: ["obstacle_layer", "inflation_layer"]

      obstacle_layer:
        plugin: "nav2_costmap_2d::ObstacleLayer"
        observation_sources: scan
        scan:
          topic: scan
          data_type: "LaserScan"
          obstacle_range: 3.0
          raytrace_range: 3.5
          marking: true
          clearing: true
          max_obstacle_height: 2.0

      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        cost_scaling_factor: 2.0
        inflation_radius: 0.35

# === PLANNER (Smac Hybrid) ===
planner_server:
  ros__parameters:
    use_sim_time: true
    expected_planner_frequency: 2.0
    planner_plugins: ["SmacPlannerHybrid"]

    SmacPlannerHybrid:
      plugin: "nav2_smac_planner::SmacPlannerHybrid"
      tolerance: 0.5
      allow_unknown: true
      downsample_costmap: false
      motion_model_for_search: "REEDS_SHEPP"   # ðŸ”¹ marche arriÃ¨re autorisÃ©e
      angle_quantization_bins: 72
      minimum_turning_radius: 1.0              # ðŸ”¹ rayon mini de braquage
      reverse_penalty: 2.0                     # ðŸ”¹ Ã©vite les zigzags mais autorise la marche arriÃ¨re
      cost_travel_multiplier: 2.0
      cost_heuristic_multiplier: 0.8           # ðŸ”¹ un peu moins agressif sur la distance brute
      analytic_expansion_ratio: 3.5            # ðŸ”¹ aide Ã  relier la fin de trajectoire en douceur
      cache_obstacle_heuristic: true
      lookup_table_size: 20.0
      allow_reverse_expansion: true            # ðŸ”¹ exploration avant/arriÃ¨re
      smooth_path: true                        # ðŸ”¹ lissage automatique du chemin gÃ©nÃ©rÃ©
      smooth_path_max_cost_factor: 2.0

# === GLOBAL COSTMAP ===
global_costmap:
  global_costmap:
    ros__parameters:
      use_sim_time: true
      global_frame: map
      robot_base_frame: robot1/base_footprint
      update_frequency: 2.0
      publish_frequency: 2.0
      rolling_window: true
      width: 15
      height: 15
      resolution: 0.05
      robot_radius: 0.30
      plugins: ["obstacle_layer", "inflation_layer"]

      obstacle_layer:
        plugin: "nav2_costmap_2d::ObstacleLayer"
        observation_sources: scan
        scan:
          topic: scan
          data_type: "LaserScan"
          obstacle_range: 4.0
          raytrace_range: 4.5
          marking: true
          clearing: true
          max_obstacle_height: 2.0

      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        cost_scaling_factor: 2.0
        inflation_radius: 0.35
