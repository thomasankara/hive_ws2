##############################################
# VANILLA BRAIN NAV2 (MPPI ONLY) - ODOM FRAMES
# Types OK: width/height=int, freq=float, seuils entiers quand requis
##############################################

# === CONTROLLER (MPPI) ===
controller_server:
  ros__parameters:
    use_sim_time: true
    enable_stamped_cmd_vel: false
    controller_frequency: 20.0

    progress_checker_plugins: ["progress_checker"]
    goal_checker_plugins: ["goal_checker"]
    controller_plugins: ["FollowPath"]

    progress_checker:
      plugin: "nav2_controller::SimpleProgressChecker"
      required_movement_radius: 0.2         # ðŸ”¹ plus tolÃ©rant
      movement_time_allowance: 15.0         # ðŸ”¹ laisse plus de temps avant d'abandonner

    goal_checker:
      plugin: "nav2_controller::SimpleGoalChecker"
      xy_goal_tolerance: 0.25
      yaw_goal_tolerance: 0.25
      stateful: false

    FollowPath:
      plugin: "nav2_mppi_controller::MPPIController"

      # --- ModÃ¨le de mouvement ---
      time_steps: 48
      model_dt: 0.05
      batch_size: 2000                     # ðŸ”¹ plus d'Ã©chantillons => meilleure exploration

      # --- Limites cinÃ©matiques ---
      vx_max: 1.2                          # ðŸ”¹ vitesse max augmentÃ©e
      vx_min: -0.3
      wz_max: 2.0                          # ðŸ”¹ autorise des virages plus rapides
      ax_max: 2.0                          # ðŸ”¹ accÃ©lÃ©rations plus franches
      wz_limit: 2.0

      # --- RÃ©glages comportementaux ---
      lookahead_dist: 0.8                  # ðŸ”¹ anticipe davantage
      transform_tolerance: 0.3
      debug_trajectory: false
      visualize: true
      publish_optimal_trajectory: true

      # --- Poids de coÃ»ts (priorise vitesse & objectif) ---
      path_cost_weight: 2.0                # â†“ moins dâ€™importance au suivi strict du chemin
      goal_cost_weight: 25.0               # â†‘ cherche Ã  aller vite vers la cible
      smooth_cost_weight: 0.05             # â†“ lissage moins prioritaire
      obstacle_cost_weight: 15.0           # â†“ moins peureux des obstacles

      # --- Liste des critics ---
      critics:
        [
          "ConstraintCritic",
          "CostCritic",
          "GoalCritic",
          "GoalAngleCritic",
          "PathAlignCritic",
          "PathFollowCritic",
          "PathAngleCritic",
          "PreferForwardCritic"
        ]

      # --- Critics tuning ---
      ConstraintCritic:
        enabled: true
        cost_power: 1
        cost_weight: 2.0

      GoalCritic:
        enabled: true
        cost_power: 1
        cost_weight: 10.0
        threshold_to_consider: 2.0

      GoalAngleCritic:
        enabled: true
        cost_power: 1
        cost_weight: 2.0
        threshold_to_consider: 0.7

      PreferForwardCritic:
        enabled: true
        cost_power: 1
        cost_weight: 6.0
        threshold_to_consider: 0.5

      CostCritic:
        enabled: true
        cost_power: 1
        cost_weight: 2.5
        near_collision_cost: 200
        critical_cost: 400.0
        consider_footprint: false
        collision_cost: 100000.0
        near_goal_distance: 1.0
        trajectory_point_step: 3

      PathAlignCritic:
        enabled: true
        cost_power: 1
        cost_weight: 8.0
        max_path_occupancy_ratio: 0.1
        trajectory_point_step: 4
        threshold_to_consider: 1.0
        offset_from_furthest: 10
        use_path_orientations: false

      PathFollowCritic:
        enabled: true
        cost_power: 1
        cost_weight: 4.0
        offset_from_furthest: 5
        threshold_to_consider: 2.0

      PathAngleCritic:
        enabled: true
        cost_power: 1
        cost_weight: 1.5
        offset_from_furthest: 3
        threshold_to_consider: 0.7
        max_angle_to_furthest: 1.5
        mode: 0

# === LOCAL COSTMAP ===
local_costmap:
  local_costmap:
    ros__parameters:
      use_sim_time: true
      global_frame: map
      robot_base_frame: robot1/base_footprint
      update_frequency: 5.0
      publish_frequency: 2.0
      rolling_window: true
      width: 6
      height: 6
      resolution: 0.05
      robot_radius: 0.30
      plugins: ["obstacle_layer", "inflation_layer"]

      obstacle_layer:
        plugin: "nav2_costmap_2d::ObstacleLayer"
        observation_sources: scan
        scan:
          topic: scan
          data_type: "LaserScan"
          obstacle_range: 3.0
          raytrace_range: 3.5
          marking: true
          clearing: true
          max_obstacle_height: 2.0

      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        cost_scaling_factor: 2.0
        inflation_radius: 0.35

# === PLANNER (Smac 2D) ===
planner_server:
  ros__parameters:
    use_sim_time: true
    expected_planner_frequency: 2.0
    planner_plugins: ["SmacPlanner2D"]

    SmacPlanner2D:
      plugin: "nav2_smac_planner::SmacPlanner2D"
      tolerance: 0.5
      allow_unknown: true
      downsample_costmap: false
      motion_model_for_search: "DUBIN"   # ou REEDS_SHEPP
      angle_quantization_bins: 72
      minimum_turning_radius: 0.5
      cost_travel_multiplier: 2.0
      cost_heuristic_multiplier: 1.0
      cache_obstacle_heuristic: true

# === GLOBAL COSTMAP ===
global_costmap:
  global_costmap:
    ros__parameters:
      use_sim_time: true
      global_frame: map
      robot_base_frame: robot1/base_footprint
      update_frequency: 2.0
      publish_frequency: 2.0
      rolling_window: true
      width: 15
      height: 15
      resolution: 0.05
      robot_radius: 0.30
      plugins: ["obstacle_layer", "inflation_layer"]

      obstacle_layer:
        plugin: "nav2_costmap_2d::ObstacleLayer"
        observation_sources: scan
        scan:
          topic: scan
          data_type: "LaserScan"
          obstacle_range: 4.0
          raytrace_range: 4.5
          marking: true
          clearing: true
          max_obstacle_height: 2.0

      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        cost_scaling_factor: 2.0
        inflation_radius: 0.35
