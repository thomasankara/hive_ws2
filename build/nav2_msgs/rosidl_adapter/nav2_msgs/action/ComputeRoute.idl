// generated from rosidl_adapter/resource/action.idl.em
// with input from nav2_msgs/action/ComputeRoute.action
// generated code does not contain a copyright notice

#include "builtin_interfaces/msg/Duration.idl"
#include "geometry_msgs/msg/PoseStamped.idl"
#include "nav2_msgs/msg/Route.idl"
#include "nav_msgs/msg/Path.idl"

module nav2_msgs {
  module action {
    @verbatim (language="comment", text=
      "goal definition")
    struct ComputeRoute_Goal {
      uint16 start_id;

      geometry_msgs::msg::PoseStamped start;

      uint16 goal_id;

      geometry_msgs::msg::PoseStamped goal;

      @verbatim (language="comment", text=
        "Whether to use the start field or find the start pose in TF")
      boolean use_start;

      @verbatim (language="comment", text=
        "Whether to use the poses or the IDs fields for request")
      boolean use_poses;
    };
    module ComputeRoute_Result_Constants {
      @verbatim (language="comment", text=
        "Error codes")
      const uint16 NONE = 0;
      const uint16 UNKNOWN = 400;
      const uint16 TF_ERROR = 401;
      const uint16 NO_VALID_GRAPH = 402;
      const uint16 INDETERMINANT_NODES_ON_GRAPH = 403;
      const uint16 TIMEOUT = 404;
      const uint16 NO_VALID_ROUTE = 405;
      const uint16 INVALID_EDGE_SCORER_USE = 407;
    };
    @verbatim (language="comment", text=
      "result definition")
    struct ComputeRoute_Result {
      builtin_interfaces::msg::Duration planning_time;

      nav_msgs::msg::Path path;

      nav2_msgs::msg::Route route;

      @default (value=0)
      uint16 error_code;

      string error_msg;
    };
    @verbatim (language="comment", text=
      "feedback definition")
    struct ComputeRoute_Feedback {
      uint8 structure_needs_at_least_one_member;
    };
  };
};
