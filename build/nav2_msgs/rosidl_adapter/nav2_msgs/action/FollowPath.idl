// generated from rosidl_adapter/resource/action.idl.em
// with input from nav2_msgs/action/FollowPath.action
// generated code does not contain a copyright notice

#include "nav_msgs/msg/Path.idl"
#include "std_msgs/msg/Empty.idl"

module nav2_msgs {
  module action {
    @verbatim (language="comment", text=
      "goal definition")
    struct FollowPath_Goal {
      nav_msgs::msg::Path path;

      string controller_id;

      string goal_checker_id;

      string progress_checker_id;
    };
    module FollowPath_Result_Constants {
      @verbatim (language="comment", text=
        "Error codes" "\n"        "Note: The expected priority order of the errors should match the message order")
      const uint16 NONE = 0;
      const uint16 UNKNOWN = 100;
      const uint16 INVALID_CONTROLLER = 101;
      const uint16 TF_ERROR = 102;
      const uint16 INVALID_PATH = 103;
      const uint16 PATIENCE_EXCEEDED = 104;
      const uint16 FAILED_TO_MAKE_PROGRESS = 105;
      const uint16 NO_VALID_CONTROL = 106;
      const uint16 CONTROLLER_TIMED_OUT = 107;
    };
    @verbatim (language="comment", text=
      "result definition")
    struct FollowPath_Result {
      std_msgs::msg::Empty result;

      uint16 error_code;

      string error_msg;
    };
    @verbatim (language="comment", text=
      "feedback definition")
    struct FollowPath_Feedback {
      float distance_to_goal;

      float speed;
    };
  };
};
